<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>exploit on Logic Security 逻辑门</title>
    <link>https://www.zoemurmure.top/tags/exploit/</link>
    <description>Recent content in exploit on Logic Security 逻辑门</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 27 Aug 2024 15:55:41 +0800</lastBuildDate><atom:link href="https://www.zoemurmure.top/tags/exploit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[学习笔记]Windows Downdate 漏洞挖掘和利用学习</title>
      <link>https://www.zoemurmure.top/posts/windows_downdate/</link>
      <pubDate>Tue, 27 Aug 2024 15:55:41 +0800</pubDate>
      
      <guid>https://www.zoemurmure.top/posts/windows_downdate/</guid>
      <description>简述 在这篇文章中，作者通过检查 Windows Update 的结构及流程，发现了其中存在的漏洞。在 Administrator 的权限下，攻击者可以通过修改注册表键值，任意控制系统文件，对其进行</description>
    </item>
    
    <item>
      <title>CVE-2023-21768 AFD for WinSock 提权漏洞利用思路探索</title>
      <link>https://www.zoemurmure.top/posts/cve_2023_21768/</link>
      <pubDate>Fri, 21 Apr 2023 09:52:44 +0800</pubDate>
      
      <guid>https://www.zoemurmure.top/posts/cve_2023_21768/</guid>
      <description>1. 前言 这篇文章分析了 CVE-2023-21768 漏洞，该漏洞存在于 Windows 操作系统的 AFD 驱动程序中。文章中原文指代参考链接[1]的文章，通过对该篇文章的学习，我复现并重新编写</description>
    </item>
    
    <item>
      <title>[HEVD exploit 系列] StackOverflowGS</title>
      <link>https://www.zoemurmure.top/posts/hevd_stackoberflowgs/</link>
      <pubDate>Tue, 10 Jan 2023 11:18:29 +0800</pubDate>
      
      <guid>https://www.zoemurmure.top/posts/hevd_stackoberflowgs/</guid>
      <description>0. 前言 HackSys Extreme Vulnerable Driver (HEVD) 是出于学习内核的漏洞利用技巧而开发的具有多个漏洞的 Windows 驱动程序。本文介绍了 Windows 10 64 位环境下如何绕过带有 /GS 保护措施的栈溢出漏洞，涉</description>
    </item>
    
    <item>
      <title>[HEVD exploit 系列] StackOverflow</title>
      <link>https://www.zoemurmure.top/posts/hevd_stackoverflow/</link>
      <pubDate>Tue, 10 Jan 2023 11:18:24 +0800</pubDate>
      
      <guid>https://www.zoemurmure.top/posts/hevd_stackoverflow/</guid>
      <description>目标函数 TriggerBufferOverflowStack __int64 __fastcall TriggerBufferOverflowStack(void *Src, unsigned __int64 Size) { char Dst[2048]; // [rsp+20h] [rbp-818h] BYREF memset(Dst, 0, sizeof(Dst)); ProbeForRead(Src, 0x800ui64, 1u); DbgPrintEx(0x4Du, 3u, &amp;#34;[+] UserBuffer: 0x%p\n&amp;#34;, Src); DbgPrintEx(0x4Du, 3u, &amp;#34;[+] UserBuffer Size: 0x%X\n&amp;#34;, Size); DbgPrintEx(0x4Du, 3u, &amp;#34;[+] KernelBuffer: 0x%p\n&amp;#34;, Dst); DbgPrintEx(0x4Du, 3u, &amp;#34;[+] KernelBuffer Size: 0x%X\n&amp;#34;, 0x800i64); DbgPrintEx(0x4Du, 3u, &amp;#34;[+] Triggering Buffer Overflow in Stack\n&amp;#34;); memmove(Dst, Src, Size); return 0i64; } 保护措施：</description>
    </item>
    
  </channel>
</rss>
